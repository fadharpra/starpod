---
import type { ImageMetadata } from 'astro';
import { Image } from 'astro:assets';

import { starpodConfig } from '../config/starpod';

type Host = {
  name: string;
  img: string;
  title: string;
  bio?: string;
  github?: string;
  twitter?: string;
  website?: string;
};

const hosts: Host[] = starpodConfig.hosts;

const images = import.meta.glob<{ default: ImageMetadata }>(
  '/src/img/people/*.{jpeg,jpg,png}'
);

// Resolve image metadata safely, with fallback if image is missing
const resolvedHosts = await Promise.all(
  hosts.map(async (host) => {
    const path = `/src/img/people/${host.img}`;
    const mod = await images[path]?.();
    return {
      ...host,
      resolvedImg: mod?.default?.src ?? null,
    };
  })
);
---

<div
  class="mx-2 mt-2 rounded-lg px-4 pb-12 pt-12 bg-light-card sm:px-6 md:px-4 lg:mx-0 lg:mt-0 lg:px-16 lg:pb-0 dark:bg-dark-card"
>
  <h3 class="section-heading pb-6">Hosted By</h3>

  {
    resolvedHosts.map((host) => (
      <div class="mb-4 flex items-center">
        {host.resolvedImg ? (
          <Image
            class="mr-4 h-12 w-12 rounded-lg"
            height={48}
            width={48}
            src={host.resolvedImg}
            alt={host.name}
          />
        ) : (
          <div class="mr-4 h-12 w-12 rounded-lg bg-gray-300 flex items-center justify-center text-sm text-white dark:bg-gray-600">
            ?
          </div>
        )}
        {host.name}
      </div>
    ))
  }
</div>

